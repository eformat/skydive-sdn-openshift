apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: null
    generation: 16
    labels:
      app: skydive
      tier: analyzer
    name: skydive-analyzer
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: skydive
        tier: analyzer
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: skydive
          tier: analyzer
      spec:
        containers:
        - args:
          - analyzer
          - --listen=0.0.0.0:8082
          env:
          - name: SKYDIVE_ANALYZER_STORAGE
            value: elasticsearch
          - name: SKYDIVE_GRAPH_BACKEND
            value: elasticsearch
          - name: SKYDIVE_USERNAME
            value: admin
          - name: SKYDIVE_PASSWORD
            value: password
          image: skydive/skydive
          imagePullPolicy: Always
          name: skydive-analyzer
          ports:
          - containerPort: 8082
            protocol: TCP
          - containerPort: 8082
            protocol: UDP
          - containerPort: 2379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        - env:
          - name: SKYDIVE_USERNAME
            value: admin
          - name: SKYDIVE_PASSWORD
            value: password
          image: elasticsearch:2
          imagePullPolicy: IfNotPresent
          name: skydive-elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    observedGeneration: 16
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: skydive
      tier: analyzer
    name: skydive-analyzer
  spec:
    ports:
    - name: port-1
      port: 8082
      protocol: TCP
      targetPort: 8082
    - name: port-2
      port: 8082
      protocol: TCP
      targetPort: 8082
    - name: port-3
      port: 2379
      protocol: TCP
      targetPort: 2379
    - name: port-4
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: skydive
      tier: analyzer
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: skydive
      tier: analyzer
    name: skydive-analyzer
  spec:
    port:
      targetPort: port-1
    to:
      kind: Service
      name: skydive-analyzer
      weight: 100
  status:
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    creationTimestamp: null
    generation: 9
    labels:
      app: skydive
      tier: agent
    name: skydive-agent
  spec:
    selector:
      matchLabels:
        app: skydive
        tier: agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: skydive
          tier: agent
      spec:
        containers:
        - args:
          - agent
          env:
          - name: SKYDIVE_AGENT_ANALYZERS
            value: skydive-analyzer.network.svc.cluster.local:8082
          image: skydive/skydive
          imagePullPolicy: Always
          name: skydive-agent
          ports:
          - containerPort: 8081
            hostPort: 8081
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker
          - mountPath: /host/run
            name: ovsdb
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          sky-dive-collector: "true"
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker
        - hostPath:
            path: /var/run/openvswitch/db.sock
          name: ovsdb
  status:
kind: List
metadata: {}
